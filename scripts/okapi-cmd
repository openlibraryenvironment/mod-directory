#! /bin/sh
USAGE="Usage: `basename $0` [-h] [-k] [-o okapiURL] [-t tenant] [-u username] [-p password] uri\n\
Default parameters can be set by a '.okapirc' file in working dir or home dir."
# e.g. ./okapi-cmd -o https://okapi-reshare.apps.k-int.com -t reshare -u admin -p rE0gNx7m2o "/directory/refdata/DirectoryEntry/Status"

if [ -f .okapirc ]; then
  . .okapirc
elif [ -f $HOME/.okapirc ]; then
  . $HOME/.okapirc
fi

# Parse command line options.
while getopts h:k:o:u:p:t: OPT; do
  case "$OPT" in
    h)
      echo $USAGE
      exit 0
      ;;
    k)
      INSECURE=--insecure
      ;;
    o)
      OKAPI=$OPTARG
      ;;
    t)
      TENANT=$OPTARG
      ;;
    u)
      UN=$OPTARG
      ;;
    p)
      PW=$OPTARG
      ;;
    \?)
      # getopts issues an error message
      echo $USAGE >&2
      exit 1
      ;;
  esac
done

# Remove the options we parsed above.
shift `expr $OPTIND - 1`

# We want one non-option argument.
if [ $# -ne 1 ]; then
  echo $USAGE >&2
  exit 1
fi

# Access additional arguments as usual through
# variables $@, $*, $1, $2, etc. or using this loop:
URI=$1

AUTH_TOKEN=$(curl $INSECURE -sSL -D - -X POST -H 'accept: application/json' -H 'Content-type: application/json' \
    -H "X-Okapi-Tenant: $TENANT" --connect-timeout 5 --max-time 30 -d "{ \"username\":\"${UN}\", \"password\": \"${PW}\" }" \
    "${OKAPI_URL}/authn/login" | grep -Fi x-okapi-token | sed 's/.*: *//;s/.$//' | xargs)
curl $INSECURE -sSL -XGET -H "X-Okapi-Token: ${AUTH_TOKEN}" -H 'accept: application/json' -H 'Content-type: application/json' \
  -H "X-Okapi-Tenant: $TENANT" --connect-timeout 5 --max-time 30 "${OKAPI_URL}${URI}"
exit 0
